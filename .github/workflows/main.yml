name: CHOSEN CI/CD

on:
  push:
    branches: [feat/project-setting]

env:
  FRONTEND_IMAGE: ghcr.io/jlake310/frontend_image
  BACKEND_IMAGE: ghcr.io/jlake310/backend_image
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push(frontend)
        id: frontend_docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:latest
          build-args: |
            REACT_APP_DPR_ENDPOINT=${{ secrets.REACT_APP_DPR_ENDPOINT }}
            REACT_APP_SUMMARY_ENDPOINT=${{ secrets.REACT_APP_SUMMARY_ENDPOINT }}

      - name: Build and push(backend)
        id: backend_docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:latest
          build-args: |
            MYSQL_HOST=${{ secrets.MYSQL_HOST }}
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            MYSQL_DB=${{ secrets.MYSQL_DB }}
            MYSQL_CHARSET=${{ secrets.MYSQL_CHARSET }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-chosen]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Docker run
        working-diretory: ./level3_nlp_productserving-nlp-07
        run: |
          docker stop ${{ secrets.FRONT_APP }} && docker rm ${{ secrets.FRONT_APP }} && docker rmi ${{ env.FRONTEND_IMAGE }}:latest
          docker stop ${{ secrets.API_APP }} && docker rm ${{ secrets.API_APP }} && docker rmi ${{ env.BACKEND_IMAGE }}:latest
          docker-compose -f docker-compose.prod.yml up -d
